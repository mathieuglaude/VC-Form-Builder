**Task – Test Orbit “Register Socket” with my real LOB credentials**

----------------------------------------------------------------
## ENVIRONMENT VARIABLES  (add to .env)

ORBIT_WS_URL=wss://devapi-orbit.nborbit.ca/socket
ORBIT_LOB_ID=a03f92ac-5ce7-4037-b8b5-79ff821b0878
ORBIT_API_KEY=MY69uVmVdz3Ml6Egr8clG7x-AYrBy0Et
ORBIT_TRANSACTION_ID=a03f92ac-5ce7-4037-b8b5-79ff821b0878

----------------------------------------------------------------
## 1 · Install lightweight WS client

```bash
pnpm i -w ws
2 · Create test script
apps/api/scripts/registerSocketTest.ts

ts
Copy
Edit
import WebSocket from 'ws';

const url  = process.env.ORBIT_WS_URL!;
const lob  = process.env.ORBIT_LOB_ID!;
const key  = process.env.ORBIT_API_KEY!;
const txId = process.env.ORBIT_TRANSACTION_ID!;

const ws = new WebSocket(url, {
  headers: {
    // Orbit headers (see docs)
    'x-orbit-lob-id': lob,
    'x-orbit-api-key': key,
    'x-orbit-transaction-id': txId
  }
});

ws.on('open', () => {
  console.log('✅ WebSocket connected — sending register frame');
  ws.send(JSON.stringify({ token: key }));           // Register Socket
});

ws.on('message', (data) => {
  const msg = data.toString();
  console.log('📨  Received:', msg);

  // Auto-terminate after first ACK
  if (msg.includes('REGISTERED')) {
    ws.send(JSON.stringify({ reason: 'client_shutdown' })); // Terminate
    ws.close();
  }
});

ws.on('close', () => {
  console.log('🛑 Socket closed');
  process.exit(0);
});

ws.on('error', (err) => {
  console.error('❌ WebSocket error', err);
  process.exit(1);
});
3 · Add npm script
Root package.json

json
Copy
Edit
"scripts": {
  "orbit:socket": "tsx apps/api/scripts/registerSocketTest.ts"
}
4 · Run test
bash
Copy
Edit
source .env            # or rely on Replit’s secrets
pnpm orbit:socket
Expected log sequence:

arduino
Copy
Edit
✅ WebSocket connected — sending register frame
📨  Received: {"status":"REGISTERED","socketId":"..."}
🛑 Socket closed
If you instead receive:

401 UNAUTHENTICATED → check API key

440 SOCKET_NOT_REGISTERED → header names/token wrong

No response → URL typo (ws:// vs wss://) or firewall

5 · Commit
feat: add Orbit Register Socket test script

Ghostwriter:
• Install ws, add test script and npm script, no prod code touched.
• Use environment variables, never hard-code secrets.
• Run eslint-fix; CI must pass (0 TS errors).

yaml
Copy
Edit

---

Feed this prompt to Replit, add your `.env` values, run `pnpm orbit:socket`, and you’ll see whether the Register Socket handshake succeeds with your new LOB credentials.