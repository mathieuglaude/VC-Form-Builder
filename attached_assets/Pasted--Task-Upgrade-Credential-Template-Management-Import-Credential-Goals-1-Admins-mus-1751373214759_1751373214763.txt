🔧 **Task: Upgrade “Credential Template Management → Import Credential”**

Goals
=====
1. Admins must be able to onboard **any Indy/AnonCred credential** (even
   if there is no OCA bundle) entirely from the UI.
2. After import, the credential:
   • appears in *Credential Library* with the same rich detail view  
   • exposes its attribute list so the form-field config dropdown works  
   • can later be edited or deleted from *Credential Templates*.
3. OCA bundle & governance URL are **optional**.  
   • If bundle URL is filled, auto-download & cache branding (same logic we
     already use for LSBC Lawyer).  
   • If not, fall back to a tidy “default card” with the primary colour
     set by the admin.

Frontend
--------
* Replace the existing “Import Template” modal with a **multi-section form**
  (`@/components/admin/ImportCredentialModal.tsx`):
── Basic Information ─────────────────────────────
• Label * (text) e.g. “BC Digital Business Card v1”
• Version * (text) e.g. “1.0”
• Issuer Name * (text) e.g. “Province of British Columbia”
• Issuer DID * (text) e.g. did:indy:candy:123…

── Ledger Identifiers ────────────────────────────
• Network (select) ["SOVRIN_MAIN", "BCOVRIN_TEST", …]
• Schema ID * (text)
• Credential Definition ID * (text)

── Attributes ────────────────────────────────────
• Attribute list * (chips or textarea, comma-separated)

── Optional Extras ───────────────────────────────
• OCA Bundle URL (text) folder URL or direct bundle.json
• Governance Doc URL (text) https://…
• Primary Brand Colour (#hex, default indigo-600)

pgsql
Copy
Edit
* **Validation**
* Show inline errors for missing required fields.
* When Bundle URL supplied, ping GitHub raw URL & show a red error if
  `bundle.json` not found.
* **Submit** hits new endpoint `POST /api/cred-templates/import` and shows
toast “Credential imported”.

Backend / DB
------------
1. **DB migration** (`apps/api/prisma/migrations/YYYYMMDD_add_attributes.sql`)
 ```sql
 ALTER TABLE credential_templates
   ADD COLUMN schema_id text NOT NULL,
   ADD COLUMN cred_def_id text NOT NULL,
   ADD COLUMN ledger_network text NOT NULL DEFAULT 'BCOVRIN_TEST',
   ADD COLUMN primary_color text DEFAULT '#4F46E5',
   ADD COLUMN brand_bg_url text,
   ADD COLUMN brand_logo_url text,
   ADD COLUMN governance_url text;
 
 CREATE TABLE credential_attributes (
   id serial PRIMARY KEY,
   template_id integer REFERENCES credential_templates(id) ON DELETE CASCADE,
   name text NOT NULL,
   pos integer NOT NULL
 );
Run with pnpm db:push and seed existing three credentials.

Service

packages/core/credentialTemplates.ts

ts
Copy
Edit
export async function importTemplate(dto: ImportDto) {
  // save template row
  // insert attributes
  // if dto.bundleUrl → fetch+cache assets (reuse ocaAssets.ts helper)
}
Route

POST /api/cred-templates/import validates body with zod, calls
importTemplate, returns saved template JSON including attributes.

API shape change

Extend GET /api/cred-lib and GET /api/cred-lib/:id to include
attributes: string[] array.

Fix Form-Builder Mapping
In FieldConfigModal.tsx, replace the failed call with the new endpoint
and populate the “Map to Attribute” select with
template.attributes.
Verify that selecting a credential immediately shows its attributes.

Branding
If bundleUrl undefined → build a card with:

thin border in template.primaryColor

big title + version, issuer below

If bundleUrl present → behave exactly like LSBC Lawyer flow.

Other requirements
Keep Zero TS errors (pnpm dev).

Unit test: packages/core/__tests__/importTemplate.test.ts.

Update docs/ADMIN_GUIDE.md with new import instructions.

After implementation run:

perl
Copy
Edit
pnpm db:push
pnpm dev
Then:

yaml
Copy
Edit
# Manual smoke test
1. Admin → Credential Templates → Import
2. Paste:
   Label: Person Credential
   Version: 1.0
   Issuer Name: Province of BC
   Issuer DID: did:indy:candy:RGjWbW1eycP7fMf4QJvX8
   Network: BCOVRIN_TEST
   Schema ID: RGjWbW1eycP7fMf4QJvX8:2:Person:1.0
   Cred Def ID: RGjWbW1eycP7fMf4QJvX8:3:CL:13:Person
   Attributes: given_names,family_name,birthdate,street_address,locality,region,postal_code
   Bundle URL: (leave empty)
3. Should appear in Credential Library & attributes list is usable
   in Field Config modal.
👉 Please implement all of the above in one PR.

yaml
Copy
Edit

---

Paste that block into the Replit AI-coding chat.  
It gives the agent every UI, DB and API detail it needs, plus a mini test plan, so the attribute-mapping dropdown will work again and admins can fully onboard new credentials.