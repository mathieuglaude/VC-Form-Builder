**Prompt – Show working Credential-Filter on Your Forms**

### 0 · Preconditions
* `/api/cred-lib` returns `[{ _id, label, branding:{logoUrl?} }]`.
* `/api/forms` returns each form with `proofDef` where keys = credentialTemplateId.

### 1 · HomePage.tsx – add state & derived array

```tsx
//  ⬆️  near imports
import { useState, useMemo } from 'react';
import useSWR from 'swr';

//  ⬇️  inside component
const { data: creds } = useSWR('/api/cred-lib');
const [filterIds, setFilterIds] = useState<string[]>([]);
const formsFiltered = useMemo(() => {
  if (!filterIds.length) return personalForms;
  return personalForms.filter(f =>
    filterIds.every(id => Object.keys(f.proofDef ?? {}).includes(id))
  );
}, [personalForms, filterIds]);
Important: change your grid loop to use formsFiltered not personalForms.

2 · Insert “Filter Forms” button
Right after <h2>Your Forms</h2> replace the old filter button block with:

tsx
Copy
Edit
<button
  onClick={() => setOpen(true)}
  className="ml-auto inline-flex items-center gap-1 rounded border px-3 py-1 text-sm"
>
  <span className="i-heroicons-funnel" />
  Filter&nbsp;Forms
  {filterIds.length > 0 && (
    <span className="rounded bg-blue-600 px-1.5 py-0.5 text-[10px] text-white">
      {filterIds.length}
    </span>
  )}
</button>
Add const [open,setOpen]=useState(false); at top.

3 · Plain-HTML Modal (no external deps)
tsx
Copy
Edit
{open && (
  <div className="fixed inset-0 z-30 flex items-center justify-center bg-black/40">
    <div className="w-80 rounded bg-white p-6 shadow">
      <h3 className="mb-4 text-lg font-semibold">Filter by Credential</h3>
      <div className="space-y-3 max-h-64 overflow-y-auto">
        {creds?.map(c => (
          <label key={c._id} className="flex items-center gap-2">
            <input
              type="checkbox"
              checked={filterIds.includes(c._id)}
              onChange={e =>
                setFilterIds(prev =>
                  e.target.checked
                    ? [...prev, c._id]
                    : prev.filter(id => id !== c._id)
                )
              }
            />
            {c.branding?.logoUrl && (
              <img src={c.branding.logoUrl} className="h-5 w-5 rounded" />
            )}
            <span className="text-sm">{c.label}</span>
          </label>
        ))}
      </div>

      <div className="mt-6 flex justify-between">
        <button
          onClick={() => setFilterIds([])}
          className="text-xs text-gray-500 underline"
        >
          Clear all
        </button>
        <button
          onClick={() => setOpen(false)}
          className="rounded bg-blue-600 px-4 py-1 text-white"
        >
          Done
        </button>
      </div>
    </div>
  </div>
)}
4 · Empty-state notice
Replace the grid map:

tsx
Copy
Edit
{formsFiltered.length ? (
  formsFiltered.map(f => <FormCard key={f._id} form={f} />)
) : (
  <p className="col-span-full mt-8 text-center text-gray-500">
    No forms match the selected credentials.
  </p>
)}
5 · Quick compile guard
Tell Ghostwriter:

“After changes, npm run dev must start with 0 TS errors and the homepage must display the ‘Filter Forms’ button next to ‘Your Forms’. Clicking it must open a modal with checkboxes fetched from /api/cred-lib.”

yaml
Copy
Edit

---

Run it.  
If the modal still isn’t there, force-refresh (⌘/Ctrl-Shift-R) to kill Vite’s hot-cache.  
You’ll now be able to pick “BC Person Credential” + “Lawyer Credential” and see only the matching forms.