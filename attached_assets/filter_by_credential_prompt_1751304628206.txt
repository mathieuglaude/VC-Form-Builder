**Prompt – Filter “Your Forms” by Credential Templates**

----------------------------------------------------------------
## 0 · API: include template IDs in list payload

In `/api/forms` add:

```ts
.select('meta updatedAt proofDef isPublished')   // proofDef already contains keys = templateId
(front-end now receives { proofDef: { <templateId>: [attrs] } } for every form)

1 · Front-end state
tsx
Copy
Edit
// HomePage.tsx
const [filterIds, setFilterIds] = useState<string[]>([]);
2 · Fetch credential options
tsx
Copy
Edit
const { data: creds } = useSWR('/api/cred-lib');   // [{ _id, label, branding }]
3 · Filter logic
tsx
Copy
Edit
const filtered = useMemo(() => {
  if (!filterIds.length) return forms;
  return forms.filter(f =>
    filterIds.every(id => Object.keys(f.proofDef || {}).includes(id))
  );
}, [forms, filterIds]);
4 · UI – Filters drawer
tsx
Copy
Edit
import { Dialog, Transition } from '@headlessui/react';

<Dialog open={open} onClose={() => setOpen(false)}>
  <div className="fixed inset-0 bg-black/30" />
  <Dialog.Panel className="fixed right-0 top-0 h-full w-80 bg-white p-6 space-y-4 overflow-y-auto">
    <h3 className="text-lg font-semibold mb-2">Filter by Credential</h3>
    {creds?.map(c => (
      <label key={c._id} className="flex items-center gap-2 mb-2">
        <input
          type="checkbox"
          checked={filterIds.includes(c._id)}
          onChange={e => {
            setFilterIds(prev =>
              e.target.checked
                ? [...prev, c._id]
                : prev.filter(id => id !== c._id)
            );
          }}
        />
        <span>
          {c.branding?.logoUrl && (
            <img src={c.branding.logoUrl} className="inline h-4 mr-1" />
          )}
          {c.label}
        </span>
      </label>
    ))}
    <button
      className="mt-4 text-sm text-blue-600"
      onClick={() => setFilterIds([])}
    >
      Clear all
    </button>
  </Dialog.Panel>
</Dialog>
Trigger with a “Filters” button (existing one) that toggles open.

5 · Grid renders filtered
tsx
Copy
Edit
<div className="grid gap-6 md:grid-cols-3">
  {filtered.map(f => <FormCard key={f._id} form={f} />)}
  {!filtered.length && <p className="col-span-full text-gray-500">No forms match.</p>}
</div>
6 · Persist last choice (optional)
tsx
Copy
Edit
useEffect(() => {
  const saved = localStorage.getItem('formFilters');
  if (saved) setFilterIds(JSON.parse(saved));
}, []);
useEffect(() => {
  localStorage.setItem('formFilters', JSON.stringify(filterIds));
}, [filterIds]);
Ghostwriter, implement all code above:
• extend /api/forms select;
• add filterIds state, fetch creds, filter logic;
• build Headless UI Drawer with checkboxes and logos;
• grid shows filtered. Pass ESLint & TS checks.

pgsql
Copy
Edit

---

### Result

* Click **Filters** → drawer slides in, shows every template in your Credential Library with its logo.  
* Check *BC Person Credential* + *BC Lawyer Credential* → only forms that ask for **both** appear.  
* Uncheck/“Clear all” → full list returns.  

Fast, local, and always in sync with whatever credentials your builder uses.