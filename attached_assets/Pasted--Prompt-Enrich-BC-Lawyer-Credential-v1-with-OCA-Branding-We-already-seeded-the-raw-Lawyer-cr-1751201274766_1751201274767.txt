**Prompt – Enrich “BC Lawyer Credential v1” with OCA Branding**

We already seeded the raw Lawyer credential template.  
Now use the official OCA bundle to add **logo, background image, and brand colours** so the card & details page feel polished.

OCA file (JSON):
https://raw.githubusercontent.com/bcgov/aries-oca-bundles/main/OCABundles/schema/bcgov-digital-trust/LSBC/Lawyer/Test/OCABundle.json

----------------------------------------------------------------
## 1 · Model Tweaks (`CredentialTemplate.ts`)
```ts
interface Branding {
  logoUrl: string;
  backgroundImage?: string;
  primaryColor?: string;      // e.g. “#00698c”
  secondaryColor?: string;    // optional
}
interface CredentialTemplateDoc extends Document {
  ...
  branding?: Branding;
  metaOverlay?: {
    issuer: string;
    issuerUrl?: string;
    description?: string;
  };
}
2 · Seeder Enhancement
In seedCredentials.ts replace the existing Lawyer object with code that fetches the OCA bundle at seed-time and extracts:

branding.logo → branding.logoUrl

branding.background_image → branding.backgroundImage

branding.primary_background_color → branding.primaryColor

branding.secondary_background_color → branding.secondaryColor

meta.issuer / meta.issuer_url / meta.description

Simplest: use node-fetch:

ts
Copy
Edit
import fetch from 'node-fetch';

const ocaUrl = 'https://raw.githubusercontent.com/bcgov/aries-oca-bundles/main/OCABundles/schema/bcgov-digital-trust/LSBC/Lawyer/Test/OCABundle.json';
const bundle = await fetch(ocaUrl).then(r => r.json()).then(arr => arr[0]);

const branding = bundle.overlays.find(o => o.type === 'aries/overlays/branding/1.0');
const meta     = bundle.overlays.find(o => o.type === 'spec/overlays/meta/1.0');

await CredentialTemplate.insertMany([
  {
    label: 'BC Lawyer Credential v1',
    version: '1.0',
    schemaId: 'QzLYGuAebsy3MXQ6b1sFiT:2:legal-professional:1.0',
    credDefId: 'QzLYGuAebsy3MXQ6b1sFiT:3:CL:2351:lawyer',
    issuerDid: 'did:indy:QzLYGuAebsy3MXQ6b1sFiT',
    schemaUrl: 'https://bcgov.github.io/digital-trust-toolkit/docs/governance/justice/legal-professional/governance',
    attributes: [/* … already defined … */],
    branding: {
      logoUrl: branding.logo,
      backgroundImage: branding.background_image,
      primaryColor: branding.primary_background_color,
      secondaryColor: branding.secondary_background_color
    },
    metaOverlay: {
      issuer: meta.issuer,
      issuerUrl: meta.issuer_url,
      description: meta.description
    },
    createdAt: new Date(),
    updatedAt: new Date()
  }
]);
Add node-fetch to backend:

css
Copy
Edit
npm i node-fetch
3 · UI Enhancements
3.1 CredentialCard.tsx
tsx
Copy
Edit
const Card = ({ form }) => {
  const { branding, metaOverlay } = form;
  return (
    <div
      className="rounded-lg shadow-sm p-4"
      style={{ borderTop: `4px solid ${branding?.primaryColor ?? '#3b82f6'}` }}
    >
      {branding?.logoUrl && (
        <img
          src={branding.logoUrl}
          alt={`${form.label} logo`}
          className="h-6 mb-3"
        />
      )}
      <h3 className="font-semibold">{form.label}</h3>
      {/* …rest unchanged… */}
    </div>
  );
};
3.2 CredentialDetailPage.tsx
tsx
Copy
Edit
<section
  className="rounded-lg overflow-hidden shadow"
  style={{
    backgroundImage: `url(${cred.branding?.backgroundImage})`,
    backgroundSize: 'cover',
    backgroundColor: cred.branding?.primaryColor ?? '#fff'
  }}
>
  <div className="bg-white/80 backdrop-blur p-8">
    <img src={cred.branding?.logoUrl} className="h-10 mb-4" />
    <h1 className="text-3xl font-semibold">{cred.label}</h1>
    <p className="text-gray-600">{cred.metaOverlay?.description}</p>
    {/* quick actions box etc. */}
  </div>
</section>
Fallback UI if no branding.

4 · Builder → Attribute Modal
No change, but when user picks this template show the logo small in the dropdown option:

tsx
Copy
Edit
<option value={tpl._id}>
  {tpl.branding?.logoUrl && <img src={tpl.branding.logoUrl} className="inline h-4 mr-2" />}
  {tpl.label}
</option>
5 · README Update
Add a note in “Branding Support” section:

Uses OCA bundle’s aries/overlays/branding/1.0 and spec/overlays/meta/1.0 overlays (logo, colours, issuer info).

Devs can drop additional bundle URLs in seedCredentials.ts or upload via UI (future work).

Ghostwriter, implement exactly the above:
• Model additions
• node-fetch seeding logic
• UI tweaks for card & detail header
• README note. Leave TODOs for caching remote assets locally.

yaml
Copy
Edit

---

### Expected result

* Run `npm run seed:creds` again → Lawyer template now stores logo + colours.  
* Reload **Credential Library** → BC Lawyer card shows Law Society logo and has a teal top border.  
* Detail page has background image & coloured header, making the credential feel authentic.

Let me know when you’re ready to brand the Business Card & Person credentials the same way (they have OCA bundles too)!
::contentReference[oaicite:0]{index=0}